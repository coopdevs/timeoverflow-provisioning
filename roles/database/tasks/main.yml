---
- name: Install gnupg2
  apt:
    name: gnupg2

- name: Add apt key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc

- name: Add PostgreSQL 9.4 PPA repository
  apt_repository:
    repo: deb https://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
    filename: pgdg

- name: APT update
  apt:
    update_cache: true

- name: Ensure all configured locales are present.
  locale_gen: "name=es_ES.UTF-8 state=present"

- name: Install PostgreSQL 9.4 and dependencies
  apt:
    name:
      - postgresql-9.4
      - postgresql-contrib-9.4
      - libpq-dev
      - python3-psycopg2

- name: Add hba entry for user
  postgresql_pg_hba:
    dest: /etc/postgresql/9.4/main/pg_hba.conf
    users: "{{ database_user }}"
    contype: local
    databases: all
    method: peer

- name: Add hba entry for BI
  postgresql_pg_hba:
    dest: /etc/postgresql/9.4/main/pg_hba.conf
    users: "{{ bi_user }}"
    contype: hostssl
    source: "{{ bi_source }}"
    databases: "{{ database_name }}"
    method: md5
  when: bi_user is defined


- name: Add user
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ database_user }}"
    role_attr_flags: "{{ database_role_attributes }}"

- name: Create db
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ database_name }}"
    owner: "{{ database_user }}"
    lc_collate: 'es_ES.UTF-8'
    lc_ctype: 'es_ES.UTF-8'
    encoding: 'UTF-8'
    template: 'template0'

- name: Adds Hstore extension to the database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: hstore
    db: "{{ database_name }}"

- name: Add unaccent extension to the database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: unaccent
    db: "{{ database_name }}"


- name: Add BI user
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ bi_user }}"
    db: "{{ database_name }}"
    password: "{{ bi_password }}"
    role_attr_flags: "{{ database_role_attributes }}"
  when: bi_user is defined

- name: Grant privs BI user
  become: yes
  become_user: postgres
  postgresql_privs:
    database: "{{ database_name }}"
    state: present
    privs: SELECT
    type: table
    schema: public
    objs: ALL_IN_SCHEMA
    roles: "{{ bi_user }}"
  when: bi_user is defined

- name: expose
  become: yes
  become_user: postgres
  blockinfile:
    create: yes
    dest: /etc/postgresql/9.4/main/postgresql.conf
    block: |
      listen_addresses = '*'
