# This requires you to run the playbooks/backup.yml first. Check that playbook
# and the README for more details.
#
# Usage:
#
#   $ pyenv exec ansible-playbook playbooks/restore.yml
#       --limit <target_server>
#       -e "backup_file=timeoverflow_staging-2019-11-18-15:37:15.sql.gz"
#       --vault-password-file=.vault_pass
---
- hosts: timeoverflow
  vars:
    filename: "/tmp/{{ backup_file }}"
    target_db: "{{ database_name }}"
  tasks:
    - name: Copy dump to remote server
      become: yes
      copy:
        src: "{{ backup_file }}"
        dest: "/tmp/{{ backup_file }}"
        owner: timeoverflow
        group: timeoverflow
        mode: '0644'

    - name: Stop app server to kill database connections
      become: yes
      become_user: root
      service:
        name: timeoverflow
        state: stopped

    - name: Stop background job workers to kill database connections
      become: yes
      become_user: root
      service:
        name: sidekiq
        state: stopped

    - pause: # noqa 502
        prompt: "\n   => âš¡ Warning, harmful action ahead. Are you sure you want to drop the target database `{{ database_name }}`? (yes/no)"
      register: drop_confirmation
      delegate_to: localhost

    - name: Drop target database
      become: yes
      become_user: postgres
      postgresql_db:
        name: "{{ target_db }}"
        state: absent
      when: drop_confirmation.user_input | bool

    - name: Create target database
      become: yes
      become_user: postgres
      postgresql_db:
        name: "{{ target_db }}"
        owner: "{{ database_user }}"
        lc_collate: 'es_ES.UTF-8'
        lc_ctype: 'es_ES.UTF-8'
        encoding: 'UTF-8'
        template: 'template0'

    - name: Restore database backup
      become: yes
      become_user: postgres
      postgresql_db:
        name: "{{ target_db }}"
        owner: "{{ database_user }}"
        lc_collate: 'es_ES.UTF-8'
        lc_ctype: 'es_ES.UTF-8'
        encoding: 'UTF-8'
        template: 'template0'
        target: "{{ filename }}"
        state: restore

    - name: Start app server
      become: yes
      become_user: root
      service:
        name: timeoverflow
        state: started

    - name: Start background job workers
      become: yes
      become_user: root
      service:
        name: sidekiq
        state: started
