sudo: required
dist: bionic
language: python
python: 3.7.4

cache:
  pip: true
  directories:
    - vendor

jobs:
  include:
    - stage: lint
      script: ansible-lint playbooks/*.yml
    - stage: lint
      script: yamllint **/*.yml
    - stage: provision_ci
      script:
        - openssl aes-256-cbc -K $encrypted_8208c68d3911_key -iv $encrypted_8208c68d3911_iv -in encrypted_files.tar.enc -out encrypted_files.tar -d
        - tar xvf encrypted_files.tar
        - eval "$(ssh-agent -s)"
        - chmod 600 travis
        - ssh-add travis
        - ansible-galaxy install -r requirements.yml
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/sys_admins.yml --limit=ci_server
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/provision.yml --limit=ci_server
    - stage: provision_staging
      script:
        - openssl aes-256-cbc -K $encrypted_8208c68d3911_key -iv $encrypted_8208c68d3911_iv -in encrypted_files.tar.enc -out encrypted_files.tar -d
        - tar xvf encrypted_files.tar
        - eval "$(ssh-agent -s)"
        - chmod 600 travis
        - ssh-add travis
        - ansible-galaxy install -r requirements.yml
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/sys_admins.yml --limit=staging --vault-password-file=vault_pass
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/provision.yml --limit=staging --vault-password-file=vault_pass
    - stage: provision_production
      script:
        - openssl aes-256-cbc -K $encrypted_8208c68d3911_key -iv $encrypted_8208c68d3911_iv -in encrypted_files.tar.enc -out encrypted_files.tar -d
        - tar xvf encrypted_files.tar
        - eval "$(ssh-agent -s)"
        - chmod 600 travis
        - ssh-add travis
        - ansible-galaxy install -r requirements.yml
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/sys_admins.yml --limit=next --vault-password-file=vault_pass
        - ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook playbooks/provision.yml --limit=next --vault-password-file=vault_pass
stages:
  - name: provision_ci
    if: branch != master
  - name: provision_staging
    if: type = push AND branch = master
  - name: provision_production
    if: type = push AND tag =~ ^v AND branch = master
